// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

auto alias_bgfx_view_id_t = typeFactory<unsigned short>::make(lib);
alias_bgfx_view_id_t->alias = "bgfx_view_id_t";
addAlias(alias_bgfx_view_id_t);

auto alias_bgfx_dynamic_index_buffer_handle_t = typeFactory<bgfx_dynamic_index_buffer_handle_s>::make(lib);
alias_bgfx_dynamic_index_buffer_handle_t->alias = "bgfx_dynamic_index_buffer_handle_t";
addAlias(alias_bgfx_dynamic_index_buffer_handle_t);

auto alias_bgfx_dynamic_vertex_buffer_handle_t = typeFactory<bgfx_dynamic_vertex_buffer_handle_s>::make(lib);
alias_bgfx_dynamic_vertex_buffer_handle_t->alias = "bgfx_dynamic_vertex_buffer_handle_t";
addAlias(alias_bgfx_dynamic_vertex_buffer_handle_t);

auto alias_bgfx_frame_buffer_handle_t = typeFactory<bgfx_frame_buffer_handle_s>::make(lib);
alias_bgfx_frame_buffer_handle_t->alias = "bgfx_frame_buffer_handle_t";
addAlias(alias_bgfx_frame_buffer_handle_t);

auto alias_bgfx_index_buffer_handle_t = typeFactory<bgfx_index_buffer_handle_s>::make(lib);
alias_bgfx_index_buffer_handle_t->alias = "bgfx_index_buffer_handle_t";
addAlias(alias_bgfx_index_buffer_handle_t);

auto alias_bgfx_indirect_buffer_handle_t = typeFactory<bgfx_indirect_buffer_handle_s>::make(lib);
alias_bgfx_indirect_buffer_handle_t->alias = "bgfx_indirect_buffer_handle_t";
addAlias(alias_bgfx_indirect_buffer_handle_t);

auto alias_bgfx_occlusion_query_handle_t = typeFactory<bgfx_occlusion_query_handle_s>::make(lib);
alias_bgfx_occlusion_query_handle_t->alias = "bgfx_occlusion_query_handle_t";
addAlias(alias_bgfx_occlusion_query_handle_t);

auto alias_bgfx_program_handle_t = typeFactory<bgfx_program_handle_s>::make(lib);
alias_bgfx_program_handle_t->alias = "bgfx_program_handle_t";
addAlias(alias_bgfx_program_handle_t);

auto alias_bgfx_shader_handle_t = typeFactory<bgfx_shader_handle_s>::make(lib);
alias_bgfx_shader_handle_t->alias = "bgfx_shader_handle_t";
addAlias(alias_bgfx_shader_handle_t);

auto alias_bgfx_texture_handle_t = typeFactory<bgfx_texture_handle_s>::make(lib);
alias_bgfx_texture_handle_t->alias = "bgfx_texture_handle_t";
addAlias(alias_bgfx_texture_handle_t);

auto alias_bgfx_uniform_handle_t = typeFactory<bgfx_uniform_handle_s>::make(lib);
alias_bgfx_uniform_handle_t->alias = "bgfx_uniform_handle_t";
addAlias(alias_bgfx_uniform_handle_t);

auto alias_bgfx_vertex_buffer_handle_t = typeFactory<bgfx_vertex_buffer_handle_s>::make(lib);
alias_bgfx_vertex_buffer_handle_t->alias = "bgfx_vertex_buffer_handle_t";
addAlias(alias_bgfx_vertex_buffer_handle_t);

auto alias_bgfx_vertex_layout_handle_t = typeFactory<bgfx_vertex_layout_handle_s>::make(lib);
alias_bgfx_vertex_layout_handle_t->alias = "bgfx_vertex_layout_handle_t";
addAlias(alias_bgfx_vertex_layout_handle_t);

auto alias_bgfx_release_fn_t = typeFactory<void (*)(void *, void *)>::make(lib);
alias_bgfx_release_fn_t->alias = "bgfx_release_fn_t";
addAlias(alias_bgfx_release_fn_t);

auto alias_bgfx_caps_gpu_t = typeFactory<bgfx_caps_gpu_s>::make(lib);
alias_bgfx_caps_gpu_t->alias = "bgfx_caps_gpu_t";
addAlias(alias_bgfx_caps_gpu_t);

auto alias_bgfx_caps_limits_t = typeFactory<bgfx_caps_limits_s>::make(lib);
alias_bgfx_caps_limits_t->alias = "bgfx_caps_limits_t";
addAlias(alias_bgfx_caps_limits_t);

auto alias_bgfx_caps_t = typeFactory<bgfx_caps_s>::make(lib);
alias_bgfx_caps_t->alias = "bgfx_caps_t";
addAlias(alias_bgfx_caps_t);

auto alias_bgfx_internal_data_t = typeFactory<bgfx_internal_data_s>::make(lib);
alias_bgfx_internal_data_t->alias = "bgfx_internal_data_t";
addAlias(alias_bgfx_internal_data_t);

auto alias_bgfx_platform_data_t = typeFactory<bgfx_platform_data_s>::make(lib);
alias_bgfx_platform_data_t->alias = "bgfx_platform_data_t";
addAlias(alias_bgfx_platform_data_t);

auto alias_bgfx_resolution_t = typeFactory<bgfx_resolution_s>::make(lib);
alias_bgfx_resolution_t->alias = "bgfx_resolution_t";
addAlias(alias_bgfx_resolution_t);

auto alias_bgfx_init_limits_t = typeFactory<bgfx_init_limits_s>::make(lib);
alias_bgfx_init_limits_t->alias = "bgfx_init_limits_t";
addAlias(alias_bgfx_init_limits_t);

auto alias_bgfx_init_t = typeFactory<bgfx_init_s>::make(lib);
alias_bgfx_init_t->alias = "bgfx_init_t";
addAlias(alias_bgfx_init_t);

auto alias_bgfx_memory_t = typeFactory<bgfx_memory_s>::make(lib);
alias_bgfx_memory_t->alias = "bgfx_memory_t";
addAlias(alias_bgfx_memory_t);

auto alias_bgfx_transient_index_buffer_t = typeFactory<bgfx_transient_index_buffer_s>::make(lib);
alias_bgfx_transient_index_buffer_t->alias = "bgfx_transient_index_buffer_t";
addAlias(alias_bgfx_transient_index_buffer_t);

auto alias_bgfx_transient_vertex_buffer_t = typeFactory<bgfx_transient_vertex_buffer_s>::make(lib);
alias_bgfx_transient_vertex_buffer_t->alias = "bgfx_transient_vertex_buffer_t";
addAlias(alias_bgfx_transient_vertex_buffer_t);

auto alias_bgfx_instance_data_buffer_t = typeFactory<bgfx_instance_data_buffer_s>::make(lib);
alias_bgfx_instance_data_buffer_t->alias = "bgfx_instance_data_buffer_t";
addAlias(alias_bgfx_instance_data_buffer_t);

auto alias_bgfx_texture_info_t = typeFactory<bgfx_texture_info_s>::make(lib);
alias_bgfx_texture_info_t->alias = "bgfx_texture_info_t";
addAlias(alias_bgfx_texture_info_t);

auto alias_bgfx_uniform_info_t = typeFactory<bgfx_uniform_info_s>::make(lib);
alias_bgfx_uniform_info_t->alias = "bgfx_uniform_info_t";
addAlias(alias_bgfx_uniform_info_t);

auto alias_bgfx_attachment_t = typeFactory<bgfx_attachment_s>::make(lib);
alias_bgfx_attachment_t->alias = "bgfx_attachment_t";
addAlias(alias_bgfx_attachment_t);

auto alias_bgfx_transform_t = typeFactory<bgfx_transform_s>::make(lib);
alias_bgfx_transform_t->alias = "bgfx_transform_t";
addAlias(alias_bgfx_transform_t);

auto alias_bgfx_view_stats_t = typeFactory<bgfx_view_stats_s>::make(lib);
alias_bgfx_view_stats_t->alias = "bgfx_view_stats_t";
addAlias(alias_bgfx_view_stats_t);

auto alias_bgfx_encoder_stats_t = typeFactory<bgfx_encoder_stats_s>::make(lib);
alias_bgfx_encoder_stats_t->alias = "bgfx_encoder_stats_t";
addAlias(alias_bgfx_encoder_stats_t);

auto alias_bgfx_stats_t = typeFactory<bgfx_stats_s>::make(lib);
alias_bgfx_stats_t->alias = "bgfx_stats_t";
addAlias(alias_bgfx_stats_t);

auto alias_bgfx_vertex_layout_t = typeFactory<bgfx_vertex_layout_s>::make(lib);
alias_bgfx_vertex_layout_t->alias = "bgfx_vertex_layout_t";
addAlias(alias_bgfx_vertex_layout_t);

auto alias_bgfx_encoder_t = typeFactory<bgfx_encoder_s>::make(lib);
alias_bgfx_encoder_t->alias = "bgfx_encoder_t";
addAlias(alias_bgfx_encoder_t);

auto alias_PFN_BGFX_GET_INTERFACE = typeFactory<bgfx_interface_vtbl *(*)(unsigned int)>::make(lib);
alias_PFN_BGFX_GET_INTERFACE->alias = "PFN_BGFX_GET_INTERFACE";
addAlias(alias_PFN_BGFX_GET_INTERFACE);

